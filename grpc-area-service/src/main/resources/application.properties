# Service properties
server.port=8080
spring.application.name=grcp-area-service

# gRPC-server properties
grpc.server.port=9092

# gRPC-client properties
grpc.client.user-client.address=static://127.0.0.1:9090
grpc.client.user-client.enable-keep-alive=true

# DataBase Properties 
spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}
spring.jpa.show-sql=${SHOW_SQL}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.default_schema=area_app
spring.jpa.properties.hibernate.jdbc.batch_size=10
spring.jpa.properties.hibernate.format_sql=true
spring.sql.init.mode=always

#Pool size settings 
spring.datasource.hikari.maximum-pool-size=2
spring.datasource.hikari.minimum-idle=1

# Logging properties
logging.level.ru.acgnn.grpc_area_service=${LOGGING_LEVEL}
spring.output.ansi.enabled=always

# OAuth2 Resource Server properties
spring.security.oauth2.resourceserver.jwt[0].issuer-uri=${OAUTH2_USER_ISSUER_URL}
spring.security.oauth2.resourceserver.jwt[0].jwk-set-uri=${OAUTH2_USER_ISSUER_URL}/protocol/openid-connect/certs
spring.security.oauth2.resourceserver.jwt[1].issuer-uri=${OAUTH2_ADMIN_ISSUER_URL}
spring.security.oauth2.resourceserver.jwt[1].jwk-set-uri=${OAUTH2_ADMIN_ISSUER_URL}/protocol/openid-connect/certs
